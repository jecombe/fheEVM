/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type { FheAMM, FheAMMInterface } from "../../contracts/FheAMM";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PIDs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Pools",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "euint32",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "reserve1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "PID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
    ],
    name: "_getOtherTokenAddr",
    outputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "PID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "amount_token0",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "amount_token1",
        type: "bytes",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_amount",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_PID",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f8b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806373dfccca1161005057806373dfccca146100cf5780638d852db51461013c578063e34336151461015d57600080fd5b806340506c13146100775780634f74f0ed1461008c5780636f6e7c721461009f575b600080fd5b61008a610085366004610d7e565b610170565b005b61008a61009a366004610e14565b6104bc565b6100b26100ad366004610e70565b610701565b6040516001600160a01b0390911681526020015b60405180910390f35b6101116100dd366004610e9c565b60006020819052908152604090208054600182015460028301546003909301546001600160a01b0392831693919092169184565b604080516001600160a01b0395861681529490931660208501529183015260608201526080016100c6565b61014f61014a366004610e9c565b610759565b6040519081526020016100c6565b61014f61016b366004610eb5565b61077a565b600085815260208190526040902080546001909101546001600160a01b039182169116816101e55760405162461bcd60e51b815260206004820152601160248201527f6e6f7420696e697469616c697a6564205800000000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b03811661023b5760405162461bcd60e51b815260206004820152601160248201527f6e6f7420696e697469616c697a6564205900000000000000000000000000000060448201526064016101dc565b600061027c87878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108b592505050565b905060006102bf86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108b592505050565b90506102d46102cf8360006108c8565b6108ff565b61032b5760405162461bcd60e51b815260206004820152602260248201527f616d6f756e7430206e65656420746f206265206772656574686572207468616e604482015261020360f41b60648201526084016101dc565b6103396102cf8260006108c8565b6103905760405162461bcd60e51b815260206004820152602260248201527f616d6f756e7431206e65656420746f206265206772656574686572207468616e604482015261020360f41b60648201526084016101dc565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd90606401600060405180830381600087803b1580156103de57600080fd5b505af11580156103f2573d6000803e3d6000fd5b50506040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03861692506323b872dd9150606401600060405180830381600087803b15801561044457600080fd5b505af1158015610458573d6000803e3d6000fd5b50505060008a815260208190526040902060020154610478915083610912565b60008a815260208190526040902060028101919091556003015461049c9082610912565b6000998a5260208a90526040909920600301989098555050505050505050565b6000806104fe86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108b592505050565b905061050e6102cf8260006108c8565b61055a5760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e74206d7573742062652067726561746572207468616e20302e000060448201526064016101dc565b6001600160a01b0384166105b05760405162461bcd60e51b815260206004820152601960248201527f546f6b656e496e20776974682061646472657373206e756c6c0000000000000060448201526064016101dc565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038516906323b872dd90606401600060405180830381600087803b1580156105fe57600080fd5b505af1158015610612573d6000803e3d6000fd5b5050505060006106228486610701565b6000858152602081905260409020549091506001600160a01b03808716911603610671576000848152602081905260409020600281015460039091015461066a91849161091e565b9250610698565b6000848152602081905260409020600381015460029091015461069591849161091e565b92505b60405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0382169063a9059cbb90604401600060405180830381600087803b1580156106e057600080fd5b505af11580156106f4573d6000803e3d6000fd5b5050505050505050505050565b600082815260208190526040812080546001909101546001600160a01b0391821691908116908416829003610734578092505b806001600160a01b0316846001600160a01b031603610751578192505b505092915050565b6001818154811061076957600080fd5b600091825260209091200154905081565b6001546000906001600160a01b0384166107d65760405162461bcd60e51b815260206004820152601160248201527f6e6f7420696e697469616c697a6564205800000000000000000000000000000060448201526064016101dc565b6001600160a01b03831661082c5760405162461bcd60e51b815260206004820152601160248201527f6e6f7420696e697469616c697a6564205900000000000000000000000000000060448201526064016101dc565b600081815260208190526040812080546001600160a01b038088167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617835560019283018054918816919092161790558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601819055905092915050565b60006108c282600261095d565b92915050565b6000826108dc576108d960006109f3565b92505b6108f86108f1848463ffffffff166001610a00565b6000610a9a565b9392505050565b600061090a82610b13565b151592915050565b60006108f88383610b77565b60008061092b8386610ba9565b905060006109398587610912565b9050600061094682610bb5565b90506109528382610bc0565b979650505050505050565b600080838360f81b604051602001610976929190610f03565b60408051601f1981840301815290829052630964a5d960e31b82529150605d90634b252ec8906109aa908490600401610f32565b602060405180830381865afa1580156109c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109eb9190610f65565b949350505050565b60006108c2826002610be4565b6000808215610a145750600160f81b610a18565b5060005b604051631f31e28560e11b815260048101869052602481018590526001600160f81b031982166044820152605d90633e63c50a906064015b602060405180830381865afa158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a919190610f65565b95945050505050565b60405163025f346960e51b8152600481018390526001600160f81b031960f883901b166024820152600090605d90634be68d20906044015b602060405180830381865afa158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190610f65565b6040516301693b9160e61b815260048101829052600090605d90635a4ee44090602401602060405180830381865afa158015610b53573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c29190610f65565b600082610b8b57610b8860006109f3565b92505b81610b9d57610b9a60006109f3565b91505b6108f883836000610c20565b60006108f88383610c74565b60006108c282610b13565b600082610bd457610bd160006109f3565b92505b6108f8838363ffffffff16610ca6565b604051631ce2e8d760e31b8152600481018390526001600160f81b031960f883901b166024820152600090605d9063e71746b890604401610ad2565b6000808215610c345750600160f81b610c38565b5060005b60405163f953e42760e01b815260048101869052602481018590526001600160f81b031982166044820152605d9063f953e42790606401610a50565b600082610c8857610c8560006109f3565b92505b81610c9a57610c9760006109f3565b91505b6108f883836000610ce1565b6040516336cdd31b60e01b81526004810183905260248101829052600160f81b60448201819052600091605d906336cdd31b906064016109aa565b6000808215610cf55750600160f81b610cf9565b5060005b60405163816d57d360e01b815260048101869052602481018590526001600160f81b031982166044820152605d9063816d57d390606401610a50565b60008083601f840112610d4757600080fd5b50813567ffffffffffffffff811115610d5f57600080fd5b602083019150836020828501011115610d7757600080fd5b9250929050565b600080600080600060608688031215610d9657600080fd5b85359450602086013567ffffffffffffffff80821115610db557600080fd5b610dc189838a01610d35565b90965094506040880135915080821115610dda57600080fd5b50610de788828901610d35565b969995985093965092949392505050565b80356001600160a01b0381168114610e0f57600080fd5b919050565b60008060008060608587031215610e2a57600080fd5b843567ffffffffffffffff811115610e4157600080fd5b610e4d87828801610d35565b9095509350610e60905060208601610df8565b9396929550929360400135925050565b60008060408385031215610e8357600080fd5b82359150610e9360208401610df8565b90509250929050565b600060208284031215610eae57600080fd5b5035919050565b60008060408385031215610ec857600080fd5b610ed183610df8565b9150610e9360208401610df8565b60005b83811015610efa578181015183820152602001610ee2565b50506000910152565b60008351610f15818460208801610edf565b6001600160f81b0319939093169190920190815260010192915050565b6020815260008251806020840152610f51816040850160208701610edf565b601f01601f19169190910160400192915050565b600060208284031215610f7757600080fd5b505191905056fea164736f6c6343000813000a";

type FheAMMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FheAMMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FheAMM__factory extends ContractFactory {
  constructor(...args: FheAMMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FheAMM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FheAMM__factory {
    return super.connect(runner) as FheAMM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FheAMMInterface {
    return new Interface(_abi) as FheAMMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FheAMM {
    return new Contract(address, _abi, runner) as unknown as FheAMM;
  }
}
